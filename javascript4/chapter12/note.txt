第12章  BOM

·理解BOM的核心---window对象
·控制窗口及弹出
·通过location对象获取页面信息
·使用navigator对象了解浏览器
·通过history对象操作浏览器历史

虽然ECMAScript把浏览器对象模型(BOM，Browser Object Model)描述为javascript的核心，但实际上BOM是
使用js开发web应用程序的核心。BOM提供了与网页无关的浏览器功能对象。

12.1 window对象

BOM的核心是window对象，表示浏览器的实例。

window对象在浏览器中有两重省份，
·一个是ECMAScript中的Global对象，
·一个是浏览器窗口的js接口。

意味着网页中定义的所有对象、变量和函数都以window作为其Global对象，都可以访问其上的全局方法。

注意：因为window对象的属性在全局作用域中有效，所以很多浏览器API及相关构造函数都以window对象属性的
形式暴露出来。

12.1.1 Global作用域

因为window对象被复用为ECMAScript的Global对象，所以通过var声明的所有全局变量和函数都会变成window
对象的属性和方法。

var age = 29
console.log(window.age)

12.1.2 窗口关系

top对象始终指向最上层（最外层）窗口，即浏览器窗口本身。而parent对象则始终指向当前窗口的父窗口。如果
当前窗口是最上层窗口，则parent等于top(都等于window)。最上层的window如果不是通过window.open()
打开的，那么其name属性就不会包含值。

还有一个self对象，它是中级window属性，始终会指向window。实际上，self和window就是同一个对象。
之所以还要暴露self，就是为了和top、parent保持一致。

12.1.3

窗口位置与像素比

window对象的位置可用通过不同的属性和方法来确定。

screenLeft  表示窗口相对于屏幕左侧的位置
screenTop   表示窗口相对于屏幕顶部的位置

可用使用moveTo()和moveBy()移动窗口

moveTo(0， 0)     移动到
和moveBy(0, 100)  从当前位置移动(0, 100)个像素

依浏览器而定，以上方法可能会被部分或全部禁用


像素比

css像素是web开发中使用的统一像素单位。这个单位的背后其实是一个角度：0.0213°。

物理像素  ----  屏幕实际像素
css像素   ----  浏览器报告的虚拟分辨率

例子

手机屏幕的物理分辨率1920*1080(其像素可能非常小)，所以浏览器需要将其分辨率降为较低的逻辑分辨率，
比如640 * 320。 这个物理像素与css像素之间的转换比率由window.devicePixelRatio属性提供，
1920 * 1080 --> 640 * 320 devicePixelRation的值就是3。这样一来，12像素(css像素)的文字实际上
就会用36像素的物理像素来显示。

window.devicePixelRation实际上与每英寸像素数（DPI，dots per inch）是对应的。
DPI：单位像素密度
devicePixelRatio：表示物理像素与逻辑像素之间的缩放系数

12.1.4 窗口大小

在不同浏览器中确定浏览器窗口大小没有想象中那么容易。所有现代浏览器都支持4个属性：

innerWidth
innerHeight
outerWidth
outerHeight

返回浏览器窗口自身的大小（不管在最外层window上使用，还是在<iframe>中使用）
outerWidth
outerHeight

返回浏览器窗口中页面视口的大小（不包含浏览器边框和工具栏）
innerWidth
innerHeight

返回页面视口的宽度和高度
document.documentElement.clientWidth
document.documentElement.clientHeight

浏览器窗口自身的精确尺寸不好确定，但可用确定页面视口的大小，

let pageWidth = window.innerWidth,
    pageHeight = window.innerHeight;

if(typeof pageWidth != 'number'){
  //compatMode页面是否处于标准模式
  if(document.compatMode == 'CSS1Compat'){
    pageWidth = document.documentElement.clientWidth;
    pageHeight = document.documentElement.clientHeight;
  }else{
    pageWidth = document.body.clientWidth;
    pageHeight = document.body.clientHeight;
  }
}

在移动设备上window.innerWidth和window.innerHeight返回视口的大小，也就是屏幕上页面可视区域的大小
