1.http

1.get和post的请求的区别

·应用场景：
  （get请求是一个幂等的请求）一般get请求用于对服务请求资源不会产生影响的场景，
    如请求网页资源
  （post不是一个幂等的请求）对服务器资源产生影响，如注册
  幂等是指一个请求方法执行多次和仅执行一次的效果完全相同
·是否缓存：浏览器一般对get请求缓存，对post请求很少缓存
·传参方式不同：get通过查询字符串传参，post通过请求体传参
·安全性：
  get请求可以将请求的参数放入url中想服务器发请求，这样的做法相对于post请求来说
  是不太安全，因为请求的url会被保留再历史记录中。
·请求长度：浏览器对于url长度的限制，所以会影响get请求发送数据时的长度。这个限制
  时浏览器规定的，并不是RFC规定的。
·参数类型：get参数只允许ASCII字符，post的参数支持更多的数据类型（如文件，图片）

2.post和put请求的区别

put请求时向服务器段发送数据，从而修改数据的内容，但是不会增加数据的种类等，也就是
说无论进行多少次PUT操作，其结果并没有不同（理解为更新数据）

post请求时向服务器端2发送数据，该请求会改变数据的种类等资源，它会创建新的内容
（可以理解为创建数据）

为什么post请求会发送两次请求？
1.第一次请求为options预检请求，状态码为204
  ·作用：
    1.查询服务器是否支持修改的请求头，如果服务器支持，则再第二次中发送真正的请求
    2.检测服务器是否为同源请求，是否支持跨域
2.第二次为真正的post请求

3.常见的HTTP请求头和响应头

HTTP Request Header

·accept：浏览器能够处理的内容类型
    accept: text/css,*/*;q=0.1
·accept-charset：浏览器能够显示的字符集
·accept-encoding：浏览器能够处理的压缩编码
    accept-encoding: gzip, deflate, br
·accept-language：浏览器当前设置的语言
    accept-language: zh-CN,zh;q=0.9,en;q=0.8
·connection：浏览器与服务器之间连接的类型
    Connection: keep-alive
·cookie：当前页面设置的任何cookie
·host：发出请求的页面所在的域
·referer：发出请求的页面的url
    referer: https://juejin.cn/
·user-agent：浏览器的用户代理字符串
    user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36

HTTP Responses Header

·date:表示消息发送的时间，时间的描述格式由rfc822定义
    date: Sun, 09 Oct 2022 15:10:24 GMT
·server：服务器名称
    server: nginx
    server: JSP3/2.0.14
·connection：浏览器与服务器之间连接的类型
    Connection: keep-alive
·cache-control：控制http缓存
    cache-control: no-store, no-cache, must-revalidate
    cache-control: max-age=2592000
·content-type：表示后面的文档属于什么MIME类型
    content-type: application/json; charset=utf-8
    content-type: application/x-javascript


Content-Type

常见的content-type属性值有以下四种：
1.application/x-www-form-urlencoded：浏览器的原生form
表单，如果不设置enctype属性，那么最终就会以application/
x-www-form-urlencoded方式提交数据。该种方式提交的数据放在
body里面，数据按照key1=val1&key2=val2的方式进行编码，
key和val都进行URL转码

2.multipart/form-data：该种方式也是创建的post提交方式
通常表单上传文件时使用该种方式

3.application/json：服务器消息主题时序列化后的json字符串

4.text/xml：该种方式主要用来提交XML格式的数据

4.HTTP状态码304是多好还是少好

为什么会有304

服务器为了提高网站访问速度，对之前访问的部分页面指定缓存机制，当客户端再次对
这些页面进行请求，服务器会根据缓存内容判断页面与之前是否相同，若相同便直接返回
304，此时客户端调用缓存内容，不必进行二次下载

状态码304不应该认为是一种错误，而是对客户端有缓存情况下服务端的一种响应

产生较多304状态码的原因：
·页面更新周期长或者不更新
·纯静态页面或强制生成静态html

304状态码出现过多会造成一下问题：
·网站快照停止
·收录减少
·权重下降

5.常见的http请求方法

·get：向服务器获取数据
·post：发送数据给服务器，通常会造成服务器资源的新增修改
·put：用户全量修改目标资源（看接口，也可以用于添加）
·patch：用于对资源进行部分修改
·delete：用于删除指定的资源
·head：获取报文首部，与get相比，不返回报文主体部分；使用场景是比如下载一个大文件
       前，先获取其大小再决定是否要下载，依次可以节约带宽资源
·options：（浏览器自动执行）、询问支持的请求方法，用来跨域请求、预检请求、判断目标是否安全
·connect：请求在与代理服务器通信时建立管道，使用管道进行TCP通信；（把服务器作为
跳板，让服务器代替用户去访问其他网页，之后把数据原原本本的返回给用户）
·trace：该方法会让服务器原样返回任意客户端请求的信息内容，主要用于测试或诊断。


说说ajax的组成部分

ajax：全称Asynchronous javascript and XML(异步的js与xml)

用js 发送异步的网络请求

ajax中的x： XML与XMLHttpRequest
           xml:解决跨平台数据传输
           在json没有出来以前，网络传输主要以xml格式数据为主。后来json问世，
           逐渐取代xml。但是由于jaax技术出来比json早，因此xml这个称呼一直保留至今

7.请介绍一下XMLHTTPRequest对象

Ajax的核心是XMLHTTPRequest。它是一种支持异步请求的技术。XMLHTTPRequest使您
可以使用js向服务器提出请求并处理响应，而不用阻塞用户。可以再页面加载以后进行
页面的局部更新。

使用方法

1.实例化ajax对象
2.open()：传教http请求，
    第一个参数是指定请求方式（get、post）
    第二个参数是指定要提交的地址是哪里，
    第三个参数是指定 请求时同步还是异步（true表示异步，false表示同步）
    第四和第五参数再http认证时候会用到。是可选的。
3.设置请求头
    setRequestHeader(stringheader,stringvalue)
4.发送请求
    send(content)：发送请求给服务器，如果是get方式，并不需要填写参数，或者填写null
    如果是post方式，要把提交的参数写上去
5.注册回调函数

1.实例化ajax对象
let xhr = new XMLHttpRequest();
2.设置请求方法和地址
xhr.open("post", 'http://www.liulongbin.top:3009/api/login')
3.设置请求头，
xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded")
4.发送请求：参数格式'key=value'
xhr.send("username=admin&password=123456)
5.注册回调函数
xhr.onreadystatechange = function() {
    //onreadystatechange会触发多次，一般需要判断xhr.reaadState == 4才获取响应数据
    if(xhr.readyState == 4) {
        console.log(xhr.responseText)
    }    
}

1.onload事件：接收服务器响应的数据（依次请求，只会执行一次）
2.onreadystatechange事件：作用与onload事件一致（一次请求，会执行多次）

XMLHttpRequest对象状态码 xhr.readyState
0：请求未建立（创建了xhr对象，但是还没有调用open）
1：服务器连接建立
2：请求已接收（send之后，服务器已经接收了请求）
3：请求处理中
4：请求已完成，且响应已就绪（44状态码等同于onload事件）



8.OPTIONS请求方法及使用场景

options是除了get和post之外的其中一种HTTP请求方法（浏览器
自动执行）

options方法是用于请求获得由Request-URI标识得资源在请求/
响应的通信过程中可以使用的功能选项。通过这个方法，客户端
可以在采取具体资源请求之前，决定对该资源采取何种必要措施
或者了解服务器得性能。该请求方法得响应不能缓存。

options请求方法的主要用途有两个：
·获得服务器支持的所有http请求方法
·用来检查访问权限。例如：在进行CORS跨域资源共享时，对于复杂
请求，就是使用options方法发送嗅探请求，以判断是否有对指定
资源的访问权限。

9.http1.0和http1.1之间有哪些区别

·连接方面，http1.0默认使用非持久连接，而http1.1默认使用
持久连接。http1.1通过使用持久连接来使多个http请求复用
同一个TCP连接，一次来避免使用非持久连接时每次需要建立连接
的时延。

·资源请求方面，在http1.0中，存在一些浪费带宽的现象，例如
客户端只是需要某个对象的一部分，而服务器却将整个对象送了
过来，并且不支持断点续传功能，http1.1则在请求头引入了range
头域，它允许之请求资源的某个部分，及返回码时206（Partial
content），这样就方便了开发者自由的选择以便于充分利用带宽
和连接。

·缓存方面，在http1.0中主要使用header里的If-Modified-Since、
Expires作为缓存判断的标准，http1.1则引入了更多的缓存控制
策略，例如Etag、If-Unmodified-Since、If-Match、If-None-match
等更多可供选择的换成头来控制缓存策略。

·http1.1中新增了host字段，用来指定服务器的域名。http1.0
中认为每台服务器都绑定一个唯一的ip，因此，请求消息中的url
并没有传递主机名（hostname）。但随着虚拟主机技术的发展，在
一台服务器上可以存在多个虚拟主机，并且他们共享一个ip地址。
因此有了host字段，这样就可以将请求发往到同一台服务器上的不同
网站。

·http1.1相对于http1.0还新增了很多请求方法，例如PUT、HTED、
options等


10.HTTP1.1和HTTP2.0的区别

·二进制协议：http/2是一个二进制协议。在http/1.1版中，报文的
头部信息必须是文本（ASCII编码）,数据体可以是文本，也可以
是二进制。http/2则是一个彻底的二进制协议，头部信息和数据
体都是二进制，并且统称为“帧”，可以分为头信息帧和数据帧。
帧的概念是它实现多路复用的基础。

·多路复用：HTTP/2实现了多路复用，http/2仍然复用TCP连接，
但是在一个连接里，客户端和服务器都可以同时发送多个请求或
响应，而且不用按照顺序一一发送，这样就避免了“队头阻塞”
的问题

·数据流：http/2使用了数据流的概念，因为http/2的数据包
是不按顺序发送的，同一个连接里面连接的数据包，可能属于
不同的请求。因此，必须要对数据包做标记，指出它属于哪个
请求。http/2将每个请求或响应的所有数据包，称为一个数据流
每个数据流都有一个独一无二的编号。数据包发送时，都必须
标记数据流ID，用来区分它属于哪个数据流。

·头信息压缩：http/2实现了头信息压缩，由于http/1.1协议不带
状态，每次请求都必须附上所有信息。所以，请求的很多字段都
时重复的，比如cookie和user agent，一模一样的内容，每次
请求都必须附带，这回浪费很多带宽，也影响速度。http/2对这一
点做了优化，引入了头信息压缩机制。一方面，头信息使用gzip
或compress压缩后再发送；另一方面，客户端和服务器同时维护
一张头信息表，所有字段都会存入这个表，生成一个索引号，以后
就不发送同样字段了，只发送索引号，这样就能提高速度了。

·服务器推送：http/2允许服务器未经请求，主动向客户端发送
资源，这叫做服务器推送。使用服务器推送提前给客户端推送必要
的资源，这样就可以相对减少一些延迟时间。这里需要注意的是
http2下服务器主动推送的是静态资源，和websocket以及使用sse
等方式向客户端发送即时诗句的推送是不同的。


11.什么是队头阻塞

队头阻塞是由http基本的“请求 - 应答”模式所导致的。http规定
报文必须是“一发一收”，这就形成了一个先进先出的“串行”队列。
队列里的请求是没有优先级的，只有入队的先后顺序，排在最前面
的请求会被优先处理。如果队首的请求因为处理的太慢耽误了时间，
那么队列里后面的所有请求也不得不跟着一起等待，结果就是其他
的请求承担了不应由的时间成本，造成了队头阻塞的现象。

11.2队头堵塞的解决方案

1.并发连接：对于一个域名允许分配多个长连接，那么相当于增加了
任务队列，不至于一个队伍的任务阻塞其他所有任务

2.域名分片：将域名分出很多二级域名，他们都指向同样的一台
服务器，能够并发的长连接数变多了，解决了队头阻塞的问题。


12.http和https协议的区别

·https协议需要ca证书，费用比较高，而http协议不需要
·http协议是超文本传输协议，信息是明文传输的，https则是具有
安全性的ssl加密传输协议；
·使用不同的连接方式，端口也不同，http协议端口是80，https协议
的端口是443
·http协议连接很简单，是无状态的；https协议是由ssl和http协议
构建的可进行加密传输、身份认证的纹螺协议，比http更加安全


13.get方法url长度限制的原因

实际上http协议规范并没有对get方法请求的url长度进行限制，
这个限制是特定的浏览器及服务器对它的限制。ie对url长度的限制
是2083字节（2k + 35）.由于ie浏览器对url长度的允许值是最小
的，所以开发过程中，只要url不超过2083字节，那么再所有浏览器
中工作都不会有问题。

GET的长度值 = URL（2083） - （你的Domain+path）- 2 (2是get请求中?=两个字符串的长度)

主流浏览器对get方法中url的长度限制范围
·IE：对url的最大限制为2083个字符，如果超过这个数字，提交按钮
没有任何反应
·Firefox：对url的长度限制为65536个字符
·Safari：url最大长度限制为80000个字符
·Opera：url最大长度限制为19000个字符
·chrome：url最大长度限制为8182字符

主流服务器对get方法中url的长度限制范围

·Apache（Server）：能接受最大url长度为8192个字符。
·Microsoft Internet Information Server（IIS）：最大16384个字符

